// TODO: Have more details in description and summary.
description = 'Embulk standard plugins'
ext {
    summary = 'Embulk standard plugins'
}

// include ruby scripts to jar. don't use sourceSets.main.resources.srcDirs
// because IntelliJ causes error if srcDirs includes files out of projectDir.
processResources.from("${buildDir}/embulk_gem_complements")

repositories {
    mavenCentral()
}

configurations {
    jruby
    rubyTestRuntime
    compileClasspath.resolutionStrategy.activateDependencyLocking()
    runtimeClasspath.resolutionStrategy.activateDependencyLocking()
}

dependencies {
    compileOnly project(":embulk-api")
    compileOnly project(":embulk-core")
    compileOnly "com.google.guava:guava:18.0"
    compileOnly "com.google.inject:guice:4.0"
    compileOnly "com.fasterxml.jackson.core:jackson-core:2.6.7"
    compileOnly "com.fasterxml.jackson.core:jackson-databind:2.6.7"
    compileOnly "javax.validation:validation-api:1.1.0.Final"
    compileOnly "joda-time:joda-time:2.9.2"
    compileOnly "org.msgpack:msgpack-core:0.8.11"
    compileOnly "org.slf4j:slf4j-api:1.7.12"

    implementation "org.apache.commons:commons-compress:1.10"

    testImplementation "junit:junit:4.12"
    testImplementation "org.hamcrest:hamcrest-library:1.3"
    testImplementation project(":embulk-api")
    testImplementation project(":embulk-core")
    testImplementation project(":embulk-core").sourceSets.test.output
    testImplementation project(":embulk-junit4")
    testImplementation "ch.qos.logback:logback-classic:1.1.3"

    testImplementation "com.fasterxml.jackson.core:jackson-databind:2.6.7"
    testImplementation "com.google.guava:guava:18.0"
    testImplementation "joda-time:joda-time:2.9.2"
    testImplementation "org.msgpack:msgpack-core:0.8.11"

    // TODO: Remove this, and load it with the proper DependencyClassLoader.
    // This statement gets it loaded by the top-level ClassLoader.
    testImplementation project(":embulk-deps-buffer")
    testImplementation project(":embulk-deps-config")
    testImplementation project(":embulk-deps-guess")

    jruby "org.jruby:jruby-complete:" + rootProject.jrubyVersion
    rubyTestRuntime project(":embulk-api")
    rubyTestRuntime project(":embulk-core")
}

task rubyTestVanilla(type: JavaExec, dependsOn: [
        "jar",
        "prepareDependencyJars",
        "installDependencyGems",
        ":embulk-deps-buffer:prepareDependencyJars",
        ":embulk-deps-config:prepareDependencyJars",
        ":embulk-deps-guess:prepareDependencyJars",
        ]) {
    workingDir = file("${project.projectDir}");
    classpath = configurations.rubyTestRuntime
    main = "org.jruby.Main"
    args = ["-Isrc/main/ruby", "-Isrc/test/ruby", "--debug", "./src/test/ruby/vanilla/run-test.rb"]
    environment "GEM_HOME": "${buildDir}/dependency_gems_installed"
}
test.dependsOn(['rubyTestVanilla'])

task installDependencyGems(type: JavaExec) {
    doFirst {
        delete("${buildDir}/dependency_gems_installed")
        mkdir("${buildDir}/dependency_gems_installed")
    }

    workingDir = file("${projectDir}")
    classpath = configurations.jruby
    main = "org.jruby.Main"
    args = ["-S", "gem", "install", "simplecov:0.10.0", "test-unit:3.0.9"]
    environment "GEM_HOME": "${buildDir}/dependency_gems_installed"
}

String buildRubyStyleVersionFromJavaStyleVersion(String javaStyleVersion) {
    if (javaStyleVersion.contains('-')) {
        List<String> versionTokens = javaStyleVersion.tokenize('-');
        if (versionTokens.size() != 2) {
            throw new GradleException('Invalid project version: ' + javaStyleVersion);
        }
        return versionTokens.get(0) + '.' + versionTokens.get(1).toLowerCase();
    }
    else {
        return javaStyleVersion;
    }
}

task prepareDependencyJars(type: Copy) {
    doFirst {
        delete file("${buildDir}/dependency_jars")
        mkdir file("${buildDir}/dependency_jars")
    }
    into "${buildDir}/dependency_jars"
    from configurations.runtimeClasspath
}

task complementEmbulkGem {
    doFirst {
        delete("${buildDir}/embulk_gem_complements")
    }
    doLast {
        def rubyVersion = buildRubyStyleVersionFromJavaStyleVersion("${project.version}")
        file("${buildDir}/embulk_gem_complements/gems/embulk-${rubyVersion}-java/lib").mkdirs()
        copy {
            from "${projectDir}/src/main/ruby"
            into "${buildDir}/embulk_gem_complements/gems/embulk-${rubyVersion}-java/lib"
        }
    }
}
processResources.dependsOn("complementEmbulkGem")
